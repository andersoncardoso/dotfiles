" Copy or symlink to ~/.vimrc or ~/_vimrc.

set nocompatible                  " Must come first because it changes other options.

call pathogen#infect()

syntax enable                     " Turn on syntax highlighting.
filetype plugin indent on         " Turn on file type detection.

runtime macros/matchit.vim        " Load the matchit plugin.

set showcmd                       " Display incomplete commands.
set showmode                      " Display the mode you're in.

set backspace=indent,eol,start    " Intuitive backspacing.

set hidden                        " Handle multiple buffers better.

set wildmenu                      " Enhanced command line completion.
set wildmode=list:longest         " Complete files like a shell.

set ignorecase                    " Case-insensitive searching.
set smartcase                     " But case-sensitive if expression contains a capital letter.

set number                        " Show line numbers.
set ruler                         " Show cursor position.

set incsearch                     " Highlight matches as you type.
set hlsearch                      " Highlight matches.

set wrap                          " Turn on line wrapping.
set scrolloff=3                   " Show 3 lines of context around the cursor.

set title                         " Set the terminal's title

" set visualbell                    " No beeping.

set nobackup                      " Don't make a backup before overwriting a file.
set nowritebackup                 " And again.
set directory=$HOME/.vim/tmp//,.  " Keep swap files in one location

set expandtab                    " Use spaces instead of tabs
set tabstop=4
set softtabstop=4
set shiftwidth=4
set autoindent
set smarttab

" toggle search highlight
nnoremap <F3> :set hls!<CR>

" ident/unindent with tabs on visual mode
vmap <Tab> >gv
vmap <S-Tab> <gv

set laststatus=2                  " Show the status line all the time
" Useful status information at bottom of screen
set statusline=[%n]\ %<%.99f\ %h%w%m%r%y%{fugitive#statusline()}\ %{exists('*CapsLockStatusline')?CapsLockStatusline():''}%=%-16(\ %l,%c-%v\ %)%P

" Or use vividchalk
colorscheme desert
" colorscheme vividchalk

" Tab mappings.
map <leader>tt :tabnew<cr>
map <leader>te :tabedit
map <leader>tc :tabclose<cr>
map <leader>to :tabonly<cr>
map <leader>tn :tabnext<cr>
map <leader>tp :tabprevious<cr>
map <leader>tf :tabfirst<cr>
map <leader>tl :tablast<cr>
map <leader>tm :tabmove

" Uncomment to use Jamis Buck's file opening plugin
"map <Leader>t :FuzzyFinderTextMate<Enter>

" automatic trailing whitespace triming
autocmd BufWritePre * :%s/\s\+$//e

" navigation through panels
nmap <silent> <A-Up> :wincmd k<CR>
nmap <silent> <A-Down> :wincmd j<CR>
nmap <silent> <A-Left> :wincmd h<CR>
nmap <silent> <A-Right> :wincmd l<CR>

" Save on focus lost or change buffer
au FocusLost * :wa
set autowriteall

" highlights lines over 80 columns
highlight LineOverWidth guibg=#424242 ctermbg=DarkGray
au ColorScheme * highlight LineOverWidth guibg=#424242
au BufWinEnter * let w:m1=matchadd('LineOverWidth', '\%>79v.\+', -1)

" highlists trailing whitespaces
highlight ExtraWhitespace ctermbg=gray guibg=#592929
au ColorScheme * highlight ExtraWhitespace guibg=#592929
au BufEnter * match ExtraWhitespace /\s\+$/
au InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
au InsertLeave * match ExtraWhiteSpace /\s\+$/

" ignore system and auto generated stuff
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*.pyc  " MacOSX/Linux
let g:ctrlp_custom_ignore = '\.git$\|\.hg$\|\.svn$'

" paste and copy from clipboard with <leader>+p and <leader>+y
map <leader>p "+gP
vmap <leader>y "+y

" map ctrl+space to autocompletion
imap <C-space> <C-p>
highlight Pmenu ctermbg=DarkGray guibg=#646464
highlight PmenuSel ctermbg=DarkRed guibg=#592929

" tcomment plugin remap
map <leader>c :TComment<CR>
imap <leader>c <ESC>:TComment<CR>i

" convenient mapping for insert mode
nnoremap <C-o> o<ESC>

inoremap " ""<Left>
inoremap "" ""

inoremap ' ''<Left>
inoremap '' ''

" syntastic configurations
let g:syntastic_mode_map = { 'mode': 'active',
            \ 'active_filetypes': ['ruby', 'python', 'javascript', 'coffee', 'json', 'css'],
            \ 'passive_filetypes': ['html'] }
" set statusline+=%{SyntasticStatuslineFlag()}
let g:syntastic_check_on_open=1
let g:syntastic_python_checker = 'flake8'
let g:syntastic_python_checker_args = "--ignore=W391"
let g:syntastic_javascript_checker = 'jslint'

nmap <leader>s :SyntasticCheck<CR>
imap <leader>s <ESC>:SyntasticCheck<CR>i


